import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from IPython.display import Image as PImage
from subprocess import check_call
from PIL import Image, ImageDraw, ImageFont
from sklearn.tree import export_graphviz
from sklearn.model_selection import train_test_split
import graphviz
from sklearn.metrics import confusion_matrix, roc_curve, auc
turnover = pd.read_csv("F:\\Libraries\\reaction\\Desktop\\turnover.csv")

turnover["salary"] = turnover["salary"].astype('category').cat.reorder_categories(['low', 'medium', 'high']).cat.codes
department = pd.get_dummies(turnover["sales"])
turnover = turnover.drop(["sales"], axis=1)
turnover = turnover.join(department)
from sklearn.tree import DecisionTreeClassifier
dt = DecisionTreeClassifier(random_state=42,max_depth=5)
X = turnover.drop(['left'], axis=1)
y = turnover['left']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

dt.fit(X_train, y_train)
dt.score(X_train, y_train)*100
pred = dt.predict(X_test)
dt.score(X_test, y_test)*100


with open("tree.dot", 'w') as f:
     f = export_graphviz(dt, out_file=f,
                         feature_names = list(X),
                         impurity = True, rounded = True, filled= True )
with open("tree.dot") as f:
 dot_graph = f.read()
draw=graphviz.Source(dot_graph)
